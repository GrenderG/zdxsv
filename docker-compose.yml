version: '3.7'

x-zdxsv-environment: &zdxsv-environment
  - ZDXSV_DNAS_PUBLIC_ADDR=${ZDXSV_DNAS_PUBLIC_ADDR}
  - ZDXSV_LOGIN_ADDR=${ZDXSV_LOGIN_ADDR}
  - ZDXSV_LOGIN_PUBLIC_ADDR=${ZDXSV_LOGIN_PUBLIC_ADDR}
  - ZDXSV_LOBBY_ADDR=${ZDXSV_LOBBY_ADDR}
  - ZDXSV_LOBBY_RPC_ADDR=${ZDXSV_LOBBY_RPC_ADDR}
  - ZDXSV_LOBBY_PUBLIC_ADDR=${ZDXSV_LOBBY_PUBLIC_ADDR}
  - ZDXSV_BATTLE_ADDR=${ZDXSV_BATTLE_ADDR}
  - ZDXSV_BATTLE_RPC_ADDR=${ZDXSV_BATTLE_RPC_ADDR}
  - ZDXSV_BATTLE_PUBLIC_ADDR=${ZDXSV_BATTLE_PUBLIC_ADDR}
  - ZDXSV_STATUS_ADDR=${ZDXSV_STATUS_ADDR}
  - ZDXSV_DB_NAME=${ZDXSV_DB_NAME}

services:
  router:
    restart: always
    build: "./docker/router"
    ports:
      - "443:443"
  https-portal:
    image: hello-world
  web:
    restart: always
    build: "./docker/web"
    volumes:
      - ./website:/var/www/html
  legacyweb:
    restart: always
    build: "./docker/legacyweb"
  dns:
    build:
      context: .
      dockerfile: "./docker/zdxsv/Dockerfile"
    command: dns
    ports:
      - "53:53/udp"
    environment: *zdxsv-environment
  login:
    build:
      context: .
      dockerfile: "./docker/zdxsv/Dockerfile"
    command: login
    volumes:
      - ./zdxsv.db:/zdxsv.db
    environment: *zdxsv-environment
  lobby:
    build:
      context: .
      dockerfile: "./docker/zdxsv/Dockerfile"
    command: lobby
    ports:
      - "8200:8200"
      - "8201:8201"     # for UDP proxy
      - "8201:8201/udp" # for UDP proxy
    volumes:
      - ./zdxsv.db:/zdxsv.db
    environment: *zdxsv-environment
  battle:
    build:
      context: .
      dockerfile: "./docker/zdxsv/Dockerfile"
    command: battle 
    ports:
      - "8210:8210"
      - "8210:8210/udp"
    environment: *zdxsv-environment
  status:
    build:
      context: .
      dockerfile: "./docker/zdxsv/Dockerfile"
    command: status
    environment: *zdxsv-environment
