package lobby

import (
	"testing"
	. "zdxsv/pkg/lobby/message"
)

func Test_ParseBattleResult(t *testing.T) {
	type args struct {
		m *Message
	}
	tests := []struct {
		name string
		args args
	}{
		{"test1-1p", args{&Message{
			Direction: ClientToServer,
			Category:  CategoryAnswer,
			Command:   0x6138,
			BodySize:  69,
			Seq:       1258,
			Status:    StatusSuccess,
			Body: []byte{
				0x67, 0x89, 0x00, 0x11, 0x00, 0x96, 0x5c, 0x5f, 0x53, 0x6f, 0x77, 0x69, 0x64, 0x63, 0x65, 0x65,
				0x68, 0x67, 0x7f, 0x61, 0x6c, 0x00, 0x00, 0x02, 0x01, 0x03, 0x01, 0x02, 0x00, 0x00, 0x00, 0x02,
				0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x04, 0x95, 0x00, 0x00, 0x0a, 0x5e, 0x00, 0x00, 0x19, 0x82,
				0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x08, 0x00, 0x00, 0x00,
				0x3c, 0x00, 0x00, 0x03, 0xe7,
			},
		}}},
		{"test1-2p", args{&Message{
			Direction: ClientToServer,
			Category:  CategoryAnswer,
			Command:   0x6138,
			BodySize:  69,
			Seq:       1256,
			Status:    StatusSuccess,
			Body: []byte{
				0x6a, 0x61, 0x79, 0x63, 0x6e, 0x00, 0x00, 0x02, 0x01, 0x03, 0x01, 0x02, 0x00, 0x00, 0x00, 0x01,
				0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x04, 0x95, 0x00, 0x00, 0x07, 0xc1, 0x00, 0x00, 0x0f, 0xb0,
				0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x08, 0x00, 0x00, 0x00,
				0x38, 0x00, 0x00, 0x03, 0xe7,
			},
		}}},
		{"test1-3p", args{&Message{
			Direction: ClientToServer,
			Category:  CategoryAnswer,
			Command:   0x6138,
			BodySize:  69,
			Seq:       1252,
			Status:    StatusSuccess,
			Body: []byte{
				0x67, 0x89, 0x00, 0x11, 0x00, 0x96, 0x66, 0x61, 0x6d, 0x55, 0x4d, 0x6f, 0x62, 0x69, 0x6f, 0x6b,
				0x66, 0x6d, 0x75, 0x67, 0x6a, 0x00, 0x00, 0x02, 0x01, 0x03, 0x02, 0x01, 0x00, 0x00, 0x00, 0x02,
				0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x04, 0x95, 0x00, 0x00, 0x07, 0xd8, 0x00, 0x00, 0x12, 0x48,
				0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x08, 0x00, 0x00, 0x00,
				0x3e, 0x00, 0x00, 0x03, 0xe7,
			},
		}}},
		{"test1-4p", args{&Message{
			Direction: ClientToServer,
			Category:  CategoryAnswer,
			Command:   0x6138,
			BodySize:  69,
			Seq:       1249,
			Status:    StatusSuccess,
			Body: []byte{
				0x67, 0x89, 0x00, 0x11, 0x00, 0x96, 0x65, 0x64, 0x6a, 0x50, 0x4e, 0x52, 0x5d, 0x54, 0x6c, 0x6e,
				0x61, 0x68, 0x76, 0x6a, 0x65, 0x00, 0x00, 0x02, 0x01, 0x03, 0x02, 0x01, 0x00, 0x00, 0x00, 0x01,
				0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x04, 0x95, 0x00, 0x00, 0x07, 0xb0, 0x00, 0x00, 0x10, 0x14,
				0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x08, 0x00, 0x00, 0x00,
				0x3a, 0x00, 0x00, 0x03, 0xe7,
			},
		}}},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			parseBattleResult(tt.args.m)
		})
	}
}
